#include <iostream>
#include <thread>
#include <mutex>
#define int long long
using namespace std;
int sum = 0;
int m;
mutex mtx;
void build(int a[] , int l , int r){
    if(l == r){
        return ;
    }    
    if(l + 1 == r){
        mtx.lock();
        sum += a[l];
        sum = sum % m;
        mtx.unlock();
        return ;
    }
    if(l + 2 == r){
        mtx.lock();
        sum += (a[l] + a[l + 1]);
        sum = sum % m;
        mtx.unlock();
        return ;
    }
    int m1 = (r + 2 * l) / 3;
    int m2 = (2 * r + l) / 3;    
    thread p(build , a , l , m1);
    thread q(build , a , m1 , m2);
    thread t(build , a , m2 , r);
    p.join();
    q.join();
    t.join();
    return ;
}
signed main(){
    int n;
    cin >> n;
    int a[n];
    for(int  i = 0; i < n ; i++){
        cin >> a[i];
    }
    cin >> m;
    build(a , 0 , n);
    cout << sum;
}
